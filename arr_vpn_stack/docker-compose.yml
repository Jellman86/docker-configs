services:
  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    networks:
      vpn_stack_brg:
        ipv4_address: 172.17.0.2
    ports:
      - 5041:5041            # qbittorrent
      - 5041:5041/udp        # qbittorrent (UDP)
      - 8081:8081            # qbittorrent webui
      - 9696:9696            # prowlarr
      - 7878:7878            # radarr
      - 8989:8989            # sonarr
      - 8191:8191            # flaresolverr
      - 8686:8686            # lidarr
      - 5030:5030            # slskd
      - 5031:5031            # slskd
      - 5032:5032            # slskd
    volumes:
      - ${DOCKERCONFIGPATH}/gluetun:/gluetun
    environment:
      - VPN_SERVICE_PROVIDER=${VPNHOST}
      - VPN_TYPE=openvpn
      - OPENVPN_USER=${OPENVPNUSER}
      - OPENVPN_PASSWORD=${OPENVPNPASSWORD}
      - TZ=Europe/London
      - SERVER_COUNTRIES=Spain,Switzerland,Netherlands,Panama
      - UPDATER_PERIOD=12h
      - DOT=on
      - DOT_CACHING=on
      - BLOCK_MALICIOUS=on
      - BLOCK_SURVEILLANCE=off
      - BLOCK_ADS=off
      - DOT_PROVIDERS=cloudflare
      - HTTP_CONTROL_SERVER=on               # enable status API :8000
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:8000/v1/openvpn/status | grep -q connected"]
      interval: 10s
      timeout: 5s
      retries: 18
      start_period: 15s

#-----------------------------------------------
  overseerr:
    image: sctx/overseerr:latest
    container_name: overseerr
    restart: unless-stopped
    environment:
      - PUID=568
      - PGID=568
      - TZ=Europe/London
      - PORT=5055
    networks:
      vpn_stack_brg:
        ipv4_address: 172.17.0.3
    ports:
      - 5055:5055
    volumes:
      - ${DOCKERCONFIGPATH}/overseerr:/app/config
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://127.0.0.1:5055/api/v1/status >/dev/null || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 10
      start_period: 90s

#-----------------------------------------------
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    restart: unless-stopped
    network_mode: "service:gluetun"
    depends_on:
      - gluetun
    # Wait for VPN to be connected before starting app
    entrypoint: ["/bin/sh","-c","until wget -qO- http://127.0.0.1:8000/v1/openvpn/status | grep -q connected; do sleep 5; done; exec /init"]
    environment:
      - PUID=568
      - PGID=568
      - TZ=Europe/London
      - WEBUI_PORT=8081
      - DOCKER_MODS=ghcr.io/vuetorrent/vuetorrent-lsio-mod:latest
    volumes:
      - ${DOCKERCONFIGPATH}/qbittorrent/config:/config
      - ${DOCKERCONFIGPATH}/qbittorrent/logs:/logs
      - ${DOWNLOADSPATH}/downloads:/downloads
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://127.0.0.1:8081/ >/dev/null || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 10
      start_period: 90s
    labels:
      deunhealth.restart.on.unhealthy: "true"

#-----------------------------------------------
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    restart: unless-stopped
    network_mode: "service:gluetun"
    depends_on:
      - gluetun
    entrypoint: ["/bin/sh","-c","until wget -qO- http://127.0.0.1:8000/v1/openvpn/status | grep -q connected; do sleep 5; done; exec /init"]
    environment:
      - PUID=568
      - PGID=568
      - TZ=Europe/London
    volumes:
      - ${DOCKERCONFIGPATH}/prowlarr/config:/config
      - ${DOWNLOADSPATH}/downloads/media:/media
      - ${DOWNLOADSPATH}/downloads:/downloads
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://127.0.0.1:9696/ping >/dev/null || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 10
      start_period: 120s
    labels:
      deunhealth.restart.on.unhealthy: "true"

#-----------------------------------------------
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    restart: unless-stopped
    network_mode: "service:gluetun"
    depends_on:
      - gluetun
    entrypoint: ["/bin/sh","-c","until wget -qO- http://127.0.0.1:8000/v1/openvpn/status | grep -q connected; do sleep 5; done; exec /init"]
    environment:
      - PUID=568
      - PGID=568
      - TZ=Europe/London
    volumes:
      - ${DOCKERCONFIGPATH}/radarr/config:/config
      - ${DOWNLOADSPATH}/downloads:/downloads
      - ${DOWNLOADSPATH}/downloads/media/video/film:/film
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://127.0.0.1:7878/ping >/dev/null || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 10
      start_period: 120s
    labels:
      deunhealth.restart.on.unhealthy: "true"

#-----------------------------------------------
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    restart: unless-stopped
    network_mode: "service:gluetun"
    depends_on:
      - gluetun
    entrypoint: ["/bin/sh","-c","until wget -qO- http://127.0.0.1:8000/v1/openvpn/status | grep -q connected; do sleep 5; done; exec /init"]
    environment:
      - PUID=568
      - PGID=568
      - TZ=Europe/London
    volumes:
      - ${DOCKERCONFIGPATH}/sonarr/config:/config
      - ${DOWNLOADSPATH}/downloads:/downloads
      - ${DOWNLOADSPATH}/downloads/media/video/tv:/tv
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://127.0.0.1:8989/ping >/dev/null || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 10
      start_period: 120s
    labels:
      deunhealth.restart.on.unhealthy: "true"

#-----------------------------------------------
  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    restart: unless-stopped
    network_mode: "service:gluetun"
    depends_on:
      - gluetun
    # flaresolverr is not an LSIO image; keep default entrypoint.
    # If you want the same gating here, swap to:
    # entrypoint: ["/bin/sh","-c","until wget -qO- http://127.0.0.1:8000/v1/openvpn/status | grep -q connected; do sleep 5; done; exec /usr/local/bin/docker-entrypoint.sh node /app/server.js"]
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=Europe/London
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://127.0.0.1:8191/health >/dev/null || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 10
      start_period: 60s
    labels:
      deunhealth.restart.on.unhealthy: "true"

#-----------------------------------------------
  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    restart: unless-stopped
    network_mode: "service:gluetun"
    depends_on:
      - gluetun
    entrypoint: ["/bin/sh","-c","until wget -qO- http://127.0.0.1:8000/v1/openvpn/status | grep -q connected; do sleep 5; done; exec /init"]
    environment:
      - PUID=568
      - PGID=568
      - TZ=Europe/London
    volumes:
      - ${DOCKERCONFIGPATH}/Lidarr/config:/config
      - ${DOWNLOADSPATH}/downloads/media/audio/music:/music
      - ${DOWNLOADSPATH}/downloads:/downloads
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://127.0.0.1:8686/ping >/dev/null || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 10
      start_period: 120s
    labels:
      deunhealth.restart.on.unhealthy: "true"

#-----------------------------------------------
  slskd:
    image: slskd/slskd
    container_name: slskd
    restart: unless-stopped
    network_mode: "service:gluetun"
    depends_on:
      - gluetun
    environment:
      - PUID=568
      - PGID=568
      - TZ=Europe/London
      - SLSKD_REMOTE_CONFIGURATION=true
      - SLSKD_FILE_PERMISSION_MODE=777
      - SLSKD_SLSK_USERNAME=${SLSKUSR}
      - SLSKD_SLSK_PASSWORD=${SLSKPASS}
      - SLSKD_DOWNLOADS_DIR=/downloads/slskd/complete
      - SLSKD_INCOMPLETE_DIR=/downloads/slskd/working
      - SLSKD_SHARED_DIR=/music
      - SLSKD_USERNAME=${SLSKUSR}
      - SLSKD_PASSWORD=${SLSKPASS}
      - SLSKD_SLSK_LISTEN_PORT=5032
    volumes:
      - ${DOCKERCONFIGPATH}/slskd/config:/app
      - ${DOWNLOADSPATH}/downloads/media/audio/music:/music
      - ${DOWNLOADSPATH}/downloads/downloads:/downloads
    # (leave without gate unless you want me to craft its exact entrypoint)

#-----------------------------------------------
  deunhealth:
    image: qmcgaw/deunhealth
    container_name: deunhealth
    network_mode: "none"
    restart: always
    environment:
      - LOG_LEVEL=info
      - HEALTH_SERVER_ADDRESS=127.0.0.1:9999
      - TZ=America/Montreal
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

#-----------------------------------------------
networks:
  vpn_stack_brg:
    external: true
